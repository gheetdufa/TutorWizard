{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dheer\\\\Downloads\\\\Repo\\\\AppTest\\\\mywebsite\\\\src\\\\pages\\\\Map\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '1000px',\n  height: '550px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst points = [{\n  tutorID: 1,\n  lat: -3.745,\n  lng: -38.543\n}, {\n  tutorID: 2,\n  lat: -3.743,\n  lng: -38.521\n}, {\n  tutorID: 3,\n  lat: -3.746,\n  lng: -38.523\n}, {\n  tutorID: 4,\n  lat: -3.747,\n  lng: -38.529\n}];\nconst MyComponent = () => {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || 'AIzaSyAyovIFffLLzoaF2ZYbpU19xs8sX5DYxV4' // Make sure to use an environment variable for your API key\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(map => {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    options: {\n      streetViewControl: false,\n      mapTypeControl: false\n    },\n    children: points.map((point, i) => /*#__PURE__*/_jsxDEV(MarkerF, {\n      position: point,\n      icon: \"customWizard.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(MyComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","MarkerF","useJsApiLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","points","tutorID","MyComponent","_s","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","map","setMap","useState","onLoad","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","options","streetViewControl","mapTypeControl","children","point","i","position","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/dheer/Downloads/Repo/AppTest/mywebsite/src/pages/Map/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '1000px',\r\n  height: '550px'\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\nconst points = [\r\n  {\r\n    tutorID: 1,\r\n    lat: -3.745,\r\n    lng: -38.543\r\n  },\r\n  {\r\n    tutorID: 2,\r\n    lat: -3.743,\r\n    lng: -38.521\r\n  },\r\n  {\r\n    tutorID: 3,\r\n    lat: -3.746,\r\n    lng: -38.523\r\n  },\r\n  {\r\n    tutorID: 4,\r\n    lat: -3.747,\r\n    lng: -38.529\r\n  }\r\n]\r\n\r\nconst MyComponent: React.FC = () => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || 'AIzaSyAyovIFffLLzoaF2ZYbpU19xs8sX5DYxV4' // Make sure to use an environment variable for your API key\r\n  })\r\n\r\n  const [map, setMap] = React.useState<google.maps.Map | null>(null)\r\n\r\n  const onLoad = React.useCallback((map: google.maps.Map) => {\r\n    const bounds = new window.google.maps.LatLngBounds(center);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback((map: google.maps.Map) => {\r\n    setMap(null);\r\n  }, [])\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      options={{\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n      }}\r\n    >\r\n      {points.map((point, i) => (\r\n        <MarkerF  position={point} icon='customWizard.png'></MarkerF>\r\n      ))}\r\n    </GoogleMap>\r\n  ) : <></>\r\n}\r\n\r\nexport default React.memo(MyComponent);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,OAAO,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5E,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,MAAM,GAAG,CACb;EACEC,OAAO,EAAE,CAAC;EACVH,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC,EACD;EACEE,OAAO,EAAE,CAAC;EACVH,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC,EACD;EACEE,OAAO,EAAE,CAAC;EACVH,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC,EACD;EACEE,OAAO,EAAE,CAAC;EACVH,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC,CACF;AAED,MAAMG,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGf,cAAc,CAAC;IAClCgB,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,IAAI,yCAAyC,CAAC;EAC3G,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGzB,KAAK,CAAC0B,QAAQ,CAAyB,IAAI,CAAC;EAElE,MAAMC,MAAM,GAAG3B,KAAK,CAAC4B,WAAW,CAAEJ,GAAoB,IAAK;IACzD,MAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACtB,MAAM,CAAC;IAC1Da,GAAG,CAACU,SAAS,CAACL,MAAM,CAAC;IACrBJ,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,SAAS,GAAGnC,KAAK,CAAC4B,WAAW,CAAEJ,GAAoB,IAAK;IAC5DC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOP,QAAQ,gBACbb,OAAA,CAACJ,SAAS;IACRmC,iBAAiB,EAAE5B,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACf0B,IAAI,EAAE,EAAG;IACTV,MAAM,EAAEA,MAAO;IACfQ,SAAS,EAAEA,SAAU;IACrBG,OAAO,EAAE;MACPC,iBAAiB,EAAE,KAAK;MACxBC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,EAED3B,MAAM,CAACU,GAAG,CAAC,CAACkB,KAAK,EAAEC,CAAC,kBACnBtC,OAAA,CAACH,OAAO;MAAE0C,QAAQ,EAAEF,KAAM;MAACG,IAAI,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC,gBACV5C,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACX,CAAC;AAAAU,EAAA,CAnCKD,WAAqB;EAAA,QACJb,cAAc;AAAA;AAAA+C,EAAA,GAD/BlC,WAAqB;AAqC3B,eAAAmC,GAAA,gBAAenD,KAAK,CAACoD,IAAI,CAACpC,WAAW,CAAC;AAAC,IAAAkC,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}