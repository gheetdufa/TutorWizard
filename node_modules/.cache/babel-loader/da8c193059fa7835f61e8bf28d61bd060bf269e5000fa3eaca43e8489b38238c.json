{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dheer\\\\Downloads\\\\Repo\\\\AppTest\\\\mywebsite\\\\src\\\\pages\\\\Map\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '450px'\n};\nconst center = {\n  lat: 40.50008,\n  lng: -74.44741\n};\n\n// Points extended with name and subject\nconst tutors = [{\n  tutorID: 1,\n  name: 'Alice',\n  subject: 'Mathematics',\n  lat: 40.501,\n  lng: -74.447\n}, {\n  tutorID: 2,\n  name: 'Bob',\n  subject: 'Physics',\n  lat: 40.502,\n  lng: -74.448\n}\n// Add other tutors as needed\n];\nconst MyComponent = () => {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAyovIFffLLzoaF2ZYbpU19xs8sX5DYxV4'\n  });\n\n  // Move customMarker definition inside the component or even inside useEffect/useCallback\n  let customMarker = {\n    url: 'https://cdn-icons-png.flaticon.com/512/1907/1907908.png'\n  };\n  const onLoad = React.useCallback(map => {\n    // If you need to use google.maps.Size, do it here after confirming the API has loaded\n    customMarker = {\n      ...customMarker,\n      scaledSize: new window.google.maps.Size(40, 40)\n    };\n    const bounds = new window.google.maps.LatLngBounds();\n    tutors.forEach(tutor => bounds.extend({\n      lat: tutor.lat,\n      lng: tutor.lng\n    }));\n    map.fitBounds(bounds);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '50px'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      options: {\n        streetViewControl: false,\n        mapTypeControl: false\n      },\n      children: tutors.map(tutor => /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: tutor.lat,\n          lng: tutor.lng\n        },\n        options: {\n          icon: customMarker\n        }\n      }, tutor.tutorID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(MyComponent, \"qUTMloutVwm9p+mRmus+TKiDHjk=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","MarkerF","useJsApiLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","tutors","tutorID","name","subject","MyComponent","_s","isLoaded","id","googleMapsApiKey","customMarker","url","onLoad","useCallback","map","scaledSize","window","google","maps","Size","bounds","LatLngBounds","forEach","tutor","extend","fitBounds","style","display","padding","children","mapContainerStyle","zoom","options","streetViewControl","mapTypeControl","position","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/dheer/Downloads/Repo/AppTest/mywebsite/src/pages/Map/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '800px',\r\n  height: '450px',\r\n};\r\n\r\nconst center = {\r\n  lat: 40.50008,\r\n  lng: -74.44741,\r\n};\r\n\r\n// Points extended with name and subject\r\nconst tutors = [\r\n  {\r\n    tutorID: 1,\r\n    name: 'Alice',\r\n    subject: 'Mathematics',\r\n    lat: 40.501,\r\n    lng: -74.447\r\n  },\r\n  {\r\n    tutorID: 2,\r\n    name: 'Bob',\r\n    subject: 'Physics',\r\n    lat: 40.502,\r\n    lng: -74.448\r\n  },\r\n  // Add other tutors as needed\r\n];\r\n\r\nconst MyComponent: React.FC = () => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: 'AIzaSyAyovIFffLLzoaF2ZYbpU19xs8sX5DYxV4'\r\n  });\r\n\r\n  // Move customMarker definition inside the component or even inside useEffect/useCallback\r\n  let customMarker = {\r\n    url: 'https://cdn-icons-png.flaticon.com/512/1907/1907908.png',\r\n  };\r\n\r\n  const onLoad = React.useCallback((map: google.maps.Map) => {\r\n    // If you need to use google.maps.Size, do it here after confirming the API has loaded\r\n    customMarker = {\r\n      ...customMarker,\r\n      scaledSize: new window.google.maps.Size(40, 40),\r\n    };\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    tutors.forEach(tutor => bounds.extend({ lat: tutor.lat, lng: tutor.lng }));\r\n    map.fitBounds(bounds);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <div style={{ display: 'flex', padding: '50px' }}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        options={{\r\n          streetViewControl: false,\r\n          mapTypeControl: false,\r\n        }}\r\n      >\r\n        {tutors.map((tutor) => (\r\n          <MarkerF key={tutor.tutorID} position={{ lat: tutor.lat, lng: tutor.lng }} options={{ icon: customMarker }} />\r\n        ))}\r\n      </GoogleMap>\r\n      {/* Additional components such as the table go here */}\r\n    </div>\r\n  ) : <></>;\r\n};\r\n\r\nexport default React.memo(MyComponent);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,OAAO,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5E,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,QAAQ;EACbC,GAAG,EAAE,CAAC;AACR,CAAC;;AAED;AACA,MAAMC,MAAM,GAAG,CACb;EACEC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE,aAAa;EACtBL,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE,CAAC;AACR,CAAC,EACD;EACEE,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,SAAS;EAClBL,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE,CAAC;AACR;AACA;AAAA,CACD;AAED,MAAMK,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGjB,cAAc,CAAC;IAClCkB,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;;EAEF;EACA,IAAIC,YAAY,GAAG;IACjBC,GAAG,EAAE;EACP,CAAC;EAED,MAAMC,MAAM,GAAGzB,KAAK,CAAC0B,WAAW,CAAEC,GAAoB,IAAK;IACzD;IACAJ,YAAY,GAAG;MACb,GAAGA,YAAY;MACfK,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE,EAAE,EAAE;IAChD,CAAC;IACD,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACG,YAAY,CAAC,CAAC;IACpDpB,MAAM,CAACqB,OAAO,CAACC,KAAK,IAAIH,MAAM,CAACI,MAAM,CAAC;MAAEzB,GAAG,EAAEwB,KAAK,CAACxB,GAAG;MAAEC,GAAG,EAAEuB,KAAK,CAACvB;IAAI,CAAC,CAAC,CAAC;IAC1Ec,GAAG,CAACW,SAAS,CAACL,MAAM,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOb,QAAQ,gBACbf,OAAA;IAAKkC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC/CrC,OAAA,CAACJ,SAAS;MACR0C,iBAAiB,EAAEnC,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACfiC,IAAI,EAAE,EAAG;MACTnB,MAAM,EAAEA,MAAO;MACfoB,OAAO,EAAE;QACPC,iBAAiB,EAAE,KAAK;QACxBC,cAAc,EAAE;MAClB,CAAE;MAAAL,QAAA,EAED5B,MAAM,CAACa,GAAG,CAAES,KAAK,iBAChB/B,OAAA,CAACH,OAAO;QAAqB8C,QAAQ,EAAE;UAAEpC,GAAG,EAAEwB,KAAK,CAACxB,GAAG;UAAEC,GAAG,EAAEuB,KAAK,CAACvB;QAAI,CAAE;QAACgC,OAAO,EAAE;UAAEI,IAAI,EAAE1B;QAAa;MAAE,GAA7Fa,KAAK,CAACrB,OAAO;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkF,CAC9G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC,gBACJhD,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACX,CAAC;AAACY,EAAA,CAzCID,WAAqB;EAAA,QACJf,cAAc;AAAA;AAAAmD,EAAA,GAD/BpC,WAAqB;AA2C3B,eAAAqC,GAAA,gBAAevD,KAAK,CAACwD,IAAI,CAACtC,WAAW,CAAC;AAAC,IAAAoC,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}