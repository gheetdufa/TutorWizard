{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dheer\\\\Downloads\\\\Repo\\\\AppTest\\\\mywebsite\\\\src\\\\pages\\\\Map\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '450px'\n};\n\n// Initially, you might not have a center or want to use a default\nconst initialCenter = {\n  lat: 40.50008,\n  // Default latitude\n  lng: -74.44741 // Default longitude\n};\nconst MyComponent = () => {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAyovIFffLLzoaF2ZYbpU19xs8sX5DYxV4' // Use your actual API key here\n  });\n  const [center, setCenter] = useState(initialCenter);\n  const [map, setMap] = React.useState(null);\n  const onLoad = useCallback(map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(map => {\n    setMap(null);\n  }, []);\n  useEffect(() => {\n    // Request user's location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error getting the geolocation: \", error);\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '50px'\n    },\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 10,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        options: {\n          streetViewControl: false,\n          mapTypeControl: false\n        },\n        children: /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"nJyZUMV9SyA78nxAGdiJpKwpBaU=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","MarkerF","useJsApiLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","initialCenter","lat","lng","MyComponent","_s","isLoaded","id","googleMapsApiKey","center","setCenter","map","setMap","onLoad","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","log","style","display","padding","children","mapContainerStyle","zoom","options","streetViewControl","mapTypeControl","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/dheer/Downloads/Repo/AppTest/mywebsite/src/pages/Map/index.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '800px',\r\n  height: '450px',\r\n};\r\n\r\n// Initially, you might not have a center or want to use a default\r\nconst initialCenter = {\r\n  lat: 40.50008, // Default latitude\r\n  lng: -74.44741, // Default longitude\r\n};\r\n\r\nconst MyComponent: React.FC = () => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: 'AIzaSyAyovIFffLLzoaF2ZYbpU19xs8sX5DYxV4' // Use your actual API key here\r\n  });\r\n\r\n  const [center, setCenter] = useState(initialCenter);\r\n  const [map, setMap] = React.useState<google.maps.Map | null>(null);\r\n\r\n  const onLoad = useCallback((map: google.maps.Map) => {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback((map: google.maps.Map) => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Request user's location\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setCenter({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting the geolocation: \", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', padding: '50px' }}>\r\n      {isLoaded ? (\r\n        <>\r\n          <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={center}\r\n            zoom={10}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{\r\n              streetViewControl: false,\r\n              mapTypeControl: false,\r\n            }}\r\n          >\r\n            {/* Optionally, place a marker at the user's location */}\r\n            <MarkerF position={center} />\r\n          </GoogleMap>\r\n          {/* Additional components like the tutor list */}\r\n        </>\r\n      ) : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MyComponent);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,OAAO,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5E,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,QAAQ;EAAE;EACfC,GAAG,EAAE,CAAC,QAAQ,CAAE;AAClB,CAAC;AAED,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGb,cAAc,CAAC;IAClCc,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE,yCAAyC,CAAC;EAC9D,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAACa,aAAa,CAAC;EACnD,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGzB,KAAK,CAACC,QAAQ,CAAyB,IAAI,CAAC;EAElE,MAAMyB,MAAM,GAAGxB,WAAW,CAAEsB,GAAoB,IAAK;IACnD,MAAMG,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;IACpDP,GAAG,CAACQ,SAAS,CAACL,MAAM,CAAC;IACrBF,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAG/B,WAAW,CAAEsB,GAAoB,IAAK;IACtDC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACd;IACA,IAAI+B,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZd,SAAS,CAAC;UACRR,GAAG,EAAEsB,QAAQ,CAACC,MAAM,CAACC,QAAQ;UAC7BvB,GAAG,EAAEqB,QAAQ,CAACC,MAAM,CAACE;QACvB,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CACF,CAAC;IACH,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnC,OAAA;IAAKoC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC9C5B,QAAQ,gBACPX,OAAA,CAAAE,SAAA;MAAAqC,QAAA,eACEvC,OAAA,CAACJ,SAAS;QACR4C,iBAAiB,EAAErC,cAAe;QAClCW,MAAM,EAAEA,MAAO;QACf2B,IAAI,EAAE,EAAG;QACTvB,MAAM,EAAEA,MAAO;QACfO,SAAS,EAAEA,SAAU;QACrBiB,OAAO,EAAE;UACPC,iBAAiB,EAAE,KAAK;UACxBC,cAAc,EAAE;QAClB,CAAE;QAAAL,QAAA,eAGFvC,OAAA,CAACH,OAAO;UAACgC,QAAQ,EAAEf;QAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC,gBAEZ,CAAC,gBACDhD,OAAA,CAAAE,SAAA,mBAAI;EAAC;IAAA2C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACtC,EAAA,CA7DID,WAAqB;EAAA,QACJX,cAAc;AAAA;AAAAmD,EAAA,GAD/BxC,WAAqB;AA+D3B,eAAAyC,GAAA,gBAAe1D,KAAK,CAAC2D,IAAI,CAAC1C,WAAW,CAAC;AAAC,IAAAwC,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}